(()=>{"use strict";const t=function(t){var r,e,n=Array.from({length:100},(function(t,r){return r})),a=(e=[],(r=t).map((function(t){return e.push(t)})),{shipCoord:e,isSunk:function(){return e.every((function(t){return"hit"===t}))},isHit:function(t){return e[t]="hit"},coordinates:r});return a.coordinates.map((function(t){return n[t]="ship"})),{createShip:a,receiveAttack:function(t){"ship"===n[t]?(n[t]="hit",a.isHit(t)):n[t]="missed"},allSunk:function(){return n.filter((function(t){return"hit"===t})).length>=17},board:n}},r=function(t){var r=Array.from({length:100},(function(t,r){return r})),e=Array.from({length:100},(function(t,r){return r}));return{playerAttack:function(e){return"attacked"!==r[e]?(r[e]="attacked",t.receiveAttack(e)):"illegal move"},computerAttack:function(){var r=e.filter((function(t){return"attacked"!==t})),n=r[Math.floor(Math.random()*r.length)];return e[n]="attacked",t.receiveAttack(n),n},boardComputer:e,boardPlayer:r}};var e=document.querySelector(".container"),n=function(t,r){var e=document.querySelectorAll(".cells2"),n=document.querySelectorAll(".cells1");t.forEach((function(t,r){"missed"===t&&(e[r].style.background="gray"),"hit"===t&&(e[r].style.background="black")})),r.forEach((function(t,r){"missed"===t&&(n[r].style.background="gray"),"hit"===t&&(n[r].style.background="black")}))};function a(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}var o=0,c=t([1,2,3,4]),i=t([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),u=r(i),l=r(c);!function(t,r){var n=document.createElement("grid");n.className="grid1";var a=document.createElement("grid");a.className="grid2",t.board.forEach((function(){var t=document.createElement("div");t.className="cells1",n.append(t),e.append(n)})),r.board.forEach((function(){var t=document.createElement("div");t.className="cells2",a.append(t),e.append(a)}))}(c,i);var d=function(){o=0===o?1:0};!function t(){c.allSunk(),i.allSunk();var r,e=function(t){if(Array.isArray(t))return a(t)}(r=document.querySelectorAll(".cells2"))||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||function(t,r){if(t){if("string"==typeof t)return a(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?a(t,r):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();0===o?e.forEach((function(r,e){r.addEventListener("click",(function(){u.playerAttack(e),n(i.board,c.board),d(),t()}))})):(l.computerAttack(),n(i.board,c.board),d())}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,